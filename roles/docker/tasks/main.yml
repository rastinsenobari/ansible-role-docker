---
# vars file for docker
- name: Uninstall old versions
  apt: 
    name: "{{ item }}"
    state: absent
    purge: yes
  loop: [docker-doc, docker.io, docker-compose, docker-compose-v2, podman-docker, containerd, run, docker-ce, docker-ce-cli, containerd.io, docker-buildx-plugin, docker-compose-plugin, docker-ce-rootless-extras]
  tags: clear 
  
- name: Install required packages
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - ca-certificates
    - software-properties-common
    - apt-transport-https
  tags: install

- name: Add docker GPG key
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg 
    dest: /etc/apt/keyrings/docker.asc
    mode: '0755'
    force: true
  tags: install

- name: Get architecture
  command: dpkg --print-architecture
  register: architecture
  tags: install

- name: Add Docker APT repository
  apt_repository:
    filename: docker
    repo: "deb [arch={{ architecture.stdout }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
  tags: install

- name: install docker and docker compose 
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin
  notify:
    reload docker
  tags: install

#Manage non-root access
- name: Add docker group
  group:
    name: docker
    state: present
  tags: user_access

- name: get username
  command: whoami
  become: false
  register: USER
  tags: user_access

- name: Add user to docker group
  user:
    name: "{{ USER.stdout}}"
    groups: docker
    append: true
  tags: user_access
